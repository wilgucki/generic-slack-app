AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Slack Application.

Globals:
  Function:
    Timeout: 3
    Runtime: python3.8
    CodeUri: slack_app/
    Environment:
      Variables:
        LOG_LEVEL: INFO

Parameters:
  SSMVerificationTokenName:
    Type: String
    Default: SLACK_APP_SLACK_SIGNING_SECRET
  SSMSecretName:
    Type: String
    Default: SLACK_APP_SLACK_SIGNING_SECRET
  ApiStageName:
    Type: String
    Default: dev
  SlackAppQueueMaxReceiveCount:
    Type: Number
    Default: 2

Resources:
  SlackAppApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub '${AWS::StackName}-api-gateway'
      StageName: !Ref ApiStageName

  SlackAppSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}-topic'
      Subscription:
        - Protocol: sqs
          Endpoint: !GetAtt SlackAppQueue.Arn

  SlackAppQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-queue'
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SlackAppDLQ.Arn
        maxReceiveCount: !Ref SlackAppQueueMaxReceiveCount

  SlackAppQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SlackAppQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Principal:
              Service: sns.amazonaws.com
            Resource: !GetAtt SlackAppQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SlackAppSNSTopic

  SlackAppDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-dlq'

  SlackAppHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-slack-handler'
      Handler: app.slack_app_handler
      Environment:
        Variables:
          SSM_VERIFICATION_TOKEN_NAME: !Ref SSMVerificationTokenName
          SSM_SECRET_NAME: !Ref SSMSecretName
          SNS_TOPIC_ARN: !Ref SlackAppSNSTopic
      Policies:
        - AmazonSSMReadOnlyAccess
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SlackAppSNSTopic.TopicName
      Events:
        SlackApp:
          Type: Api
          Properties:
            RestApiId: !Ref SlackAppApiGateway
            Path: /action-endpoint
            Method: post
        SlashCommand:
          Type: Api
          Properties:
            RestApiId: !Ref SlackAppApiGateway
            Path: /slash-command
            Method: post

  SlackAppQueueWorkerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-queue-worker'
      Handler: app.queue_worker
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt SlackAppQueue.QueueName
      Events:
        SlackAppQueueMessage:
          Type: SQS
          Properties:
            BatchSize: 10
            Queue: !GetAtt SlackAppQueue.Arn

Outputs:
  SlackAppApiGatewaySlashCommand:
    Value: !Sub 'https://${SlackAppApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/slash-command/'
  SlackAppApiGatewayEvent:
    Value: !Sub 'https://${SlackAppApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/action-endpoint/'
